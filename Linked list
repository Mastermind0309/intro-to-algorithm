#include<stdlib.h>
#include<stdio.h>
#include<iostream>

//#include<bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    Node *prev, *next;
};
// need to construct insert, remove and search fuction
/*
a->b->c
 pr=a b= to be insert(nd) c=pr->next
 
 
 */
// insert fucntion
void insert(Node *pr, int Data)
{
    Node *nd = new Node;
    Node *ne = pr->next;
    
    // take care of data
    nd->data= Data;
    nd->prev= pr;
    nd->next= ne;
    // take care of the node ahead
    pr->next= nd;
    if(ne) ne->prev= nd;
}
// remove function
void remove( Node *bye)
{
    Node *pr= bye->prev;
    Node *ne= bye->next;
    if(ne) pr->next= ne;
    if(pr) ne->prev= pr;
    
    delete bye;
}

// search fucntion
void search (Node *cur, Node *end, int data)
{
    while(cur!= end)
    {
        if(cur->data == data)
        {
            cout<<"Y\n";
            return;
        }
        cur=cur->next;
    }
    cout<<"N\n";
    return;
}

// show
void output(Node *cur, Node *end)
{
    while (cur!=end)
    {
        cout<< cur->data<<" ";
        cur= cur->next;
        
    }
    cout<< "\n";
    return;
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    int n;
    cin>>n;
    // for dummy nodes
    Node *head= new Node;
    Node *tail= new Node;
    head->next=tail;
    head->prev= NULL;
    tail->next=NULL;
    tail->prev=head;
    
    string s;
    int i;
    while(n--)
    {
        cin>>s;
        if(s=="IH")
        {
            cin>>i;
            insert(head, i);
        }
        else if(s=="IT")
        {
            cin>>i;
            insert(tail->prev, i);
        }
        else if(s=="RH")
        {
            if(head->next!=tail) remove(head->next);
        }
        else if(s=="RT")
        {
            if(head->next!=tail) remove(tail->prev);
        }
        else if(s=="S")
        {
            cin>>i;
            if(head->next!=tail)
            {
                search(head->next, tail, i);
            }else{
                cout<<"E\n";
            }
        }
        else{
                if(head->next!=tail)
                {
                    output(head->next,tail);
                }else{
                    cout<<"E\n";
            }
        }
    }
    return 0;
}

